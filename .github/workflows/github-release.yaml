name: Create and Publish Tagged Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag for the release"
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      COSIGN_EXPERIMENTAL: "true"
      COSIGN_YES: "true"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.3.0
      - name: Check install!
        run: cosign version

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          path: "./"
          output-file: ./sbom-${{ github.event.inputs.tag }}.spdx.json
          format: "spdx"

      - name: Create Tag
        run: git tag ${{ github.event.inputs.tag }}

      - name: Push Tag
        run: git push origin ${{ github.event.inputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        run: gh release create ${{ github.event.inputs.tag }} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SBOM as Release Asset
        run: gh release upload ${{ github.event.inputs.tag }} *.spdx.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Release Assets
        run: |
          curl -sL -o ${{ github.event.inputs.tag }}.zip https://github.com/${{ github.repository }}/archive/${{ github.event.inputs.tag }}.zip
          curl -sL -o ${{ github.event.inputs.tag }}.tar.gz https://github.com/${{ github.repository }}/archive/${{ github.event.inputs.tag }}.tar.gz

      - name: Compute Checksums
        run: |
          echo "Checksum for ${{ github.event.inputs.tag }}.zip:"
          sha256sum ${{ github.event.inputs.tag }}.zip
          echo "Checksum for ${{ github.event.inputs.tag }}.tar.gz:"
          sha256sum ${{ github.event.inputs.tag }}.tar.gz

      - name: Cosign source code and sbom
        run: |
          cosign sign --yes -a GIT_HASH="${{ github.sha }}" -a RUN_ID="${{ github.run_id }}" -a RUN_ATTEMPT="${{ github.run_attempt }}"  -a GIT_TAG="${{ github.event.inputs.tag }}" -a "GIT_REPO="${{ github.repository }}" -a "GIT_WORKFLOW=${{ github.workflow }}" sbom-${{ github.event.inputs.tag }}.spdx.json --bundle sbom-${{ github.event.inputs.tag }}.spdx.json.cosign.bundle

      - name: Upload Cosign Bundles
        run: gh release upload ${{ github.event.inputs.tag }} *.cosign.bundle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: list content
        run: ls -l

      - name: Update Semantic Tag
        run: |
          TAG=${{ github.event.inputs.tag }}
          SEMANTIC_TAG=$(echo $TAG | grep -oP '^v\d+')
          git tag -f $SEMANTIC_TAG $TAG
          git push -f origin $SEMANTIC_TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
