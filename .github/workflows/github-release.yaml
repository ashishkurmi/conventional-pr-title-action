name: Create and Publish Tagged Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag for the release"
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      COSIGN_EXPERIMENTAL: "true"
      COSIGN_YES: "true"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure git cli
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          path: "./"
          output-file: ./sbom-${{ github.event.inputs.tag }}.spdx.json
          format: "spdx"

      - name: Create Tag Object
        run: |
          TAG_SHA=$(git rev-parse HEAD)  # Gets the SHA of the latest commit
          DATA=$(echo '{
            "tag": "${{ github.event.inputs.tag }}",
            "message": "This is my tag message for ${{ github.event.inputs.tag }}",
            "object": "'$TAG_SHA'",
            "type": "commit",
            "tagger": {
              "name": "Your Name",
              "email": "your-email@example.com",
              "date": "$(date -Iseconds)"
            }
          }' | jq -c .)
          gh api --method POST /repos/${{ github.repository }}/git/tags -f data="$DATA"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Tag Reference
        run: |
          TAG_OBJECT_SHA=$(gh api /repos/${{ github.repository }}/git/refs/tags/${{ github.event.inputs.tag }} | jq -r '.object.sha')
          DATA=$(echo '{
            "ref": "refs/tags/${{ github.event.inputs.tag }}",
            "sha": "'$TAG_OBJECT_SHA'"
          }' | jq -c .)
          gh api --method POST /repos/${{ github.repository }}/git/refs -f data="$DATA"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        run: gh release create ${{ github.event.inputs.tag }} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Semantic Tag
        run: |
          TAG=${{ github.event.inputs.tag }}
          SEMANTIC_TAG=$(echo $TAG | grep -oP '^v\d+')
          git tag -f $SEMANTIC_TAG $TAG
          git push -f origin $SEMANTIC_TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
